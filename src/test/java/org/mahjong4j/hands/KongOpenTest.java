package org.mahjong4j.hands;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;
import static org.mahjong4j.tile.Tile.*;

/**
 * @author yu1ro
 */
public class KongOpenTest {
    boolean open = true;
    private Kong one;
    private Kong four;
    private Kong fls;

    @Before
    public void setUp() throws Exception {
        one = new Kong(open, W2);
        four = new Kong(open, W2, W2, W2, W2);
        fls = new Kong(open, T1, T1, T1, T2);
    }

    @Test
    public void testCheckTrue() throws Exception {
        assertTrue(Kong.check(T2, T2, T2, T2));
    }

    @Test
    public void testCheckFalse() throws Exception {
        assertFalse(Kong.check(T2, T2, W4, T2));
    }

    @Test
    public void testGetTileOne() throws Exception {
        assertEquals(W2, one.getTile());
    }

    @Test
    public void testGetTileFour() throws Exception {
        assertEquals(W2, four.getTile());
    }

    @Test
    public void testGetTileFls() throws Exception {
        assertNull(fls.getTile());
    }

    @Test
    public void testGetIsMentsuOne() throws Exception {
        assertTrue(one.isMeld());
    }

    @Test
    public void testGetIsMentsuFour() throws Exception {
        assertTrue(four.isMeld());
    }

    @Test
    public void testGetIsMentsuFls() throws Exception {
        assertFalse(fls.isMeld());
    }

    @Test
    public void testGetIsOpenOne() throws Exception {
        assertTrue(one.isOpen());
    }

    @Test
    public void testGetIsOpen4() throws Exception {
        assertTrue(four.isOpen());
    }

    @Test
    public void testGetIsOpenF() throws Exception {
        assertTrue(fls.isOpen());
    }

    @Test
    public void testEquals() throws Exception {
        assertTrue(one.equals(four));
        assertFalse(one.equals(fls));
    }

    @Test
    public void testHashCode() throws Exception {
        assertEquals(one.hashCode(), four.hashCode());
        assertNotEquals(one.hashCode(), fls.hashCode());
    }
}